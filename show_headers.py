import streamlit as st
import pandas as pd
import openpyxl
import io
from utils import load_excel_file
import os

st.set_page_config(
    page_title="–ó–∞–≥–æ–ª–æ–≤–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤",
    page_icon="üìã",
    layout="wide"
)

st.title("üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤")
st.markdown("""
### –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫

–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∞–ø–ø–∏–Ω–≥–æ–≤.
""")

# –ü–æ–∏—Å–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —à–∞–±–ª–æ–Ω–æ–≤
template_files = []
assets_dir = "attached_assets"
if os.path.exists(assets_dir):
    for file in os.listdir(assets_dir):
        if file.endswith(".xlsx"):
            template_files.append(os.path.join(assets_dir, file))

col1, col2 = st.columns(2)

with col1:
    st.subheader("üü£ –®–∞–±–ª–æ–Ω Wildberries")
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —à–∞–±–ª–æ–Ω–∞ Wildberries
        wb_file = None
        
        # –ò—â–µ–º —à–∞–±–ª–æ–Ω Wildberries —Å—Ä–µ–¥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        for file_path in template_files:
            if "—Ç–∞—á–∫–∏" in file_path.lower() or "wildberries" in file_path.lower():
                wb_file = file_path
                break
        
        if wb_file is None and len(template_files) > 0:
            wb_file = template_files[0]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ
        
        if wb_file:
            with open(wb_file, "rb") as f:
                workbook, sheets = load_excel_file(f)
                
                # –ò—â–µ–º –ª–∏—Å—Ç "–¢–æ–≤–∞—Ä—ã"
                target_sheet = None
                for sheet_name in sheets:
                    if sheet_name.lower() == "—Ç–æ–≤–∞—Ä—ã":
                        target_sheet = sheet_name
                        break
                
                if target_sheet is None and len(sheets) > 0:
                    target_sheet = sheets[0]
                
                if target_sheet:
                    st.success(f"–§–∞–π–ª: {os.path.basename(wb_file)}, –õ–∏—Å—Ç: {target_sheet}")
                    
                    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–æ–±—ã—á–Ω–æ –≤ 3-–π —Å—Ç—Ä–æ–∫–µ –¥–ª—è Wildberries)
                    sheet = workbook[target_sheet]
                    header_row = 3  # –¢–∏–ø–∏—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ Wildberries
                    
                    headers = []
                    for cell in sheet[header_row]:
                        if cell.value is not None and str(cell.value).strip() != "":
                            headers.append(str(cell.value))
                    
                    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ –¥–≤–∞ —Å—Ç–æ–ª–±–∏–∫–∞
                    if headers:
                        st.markdown("#### –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫:")
                        
                        # –†–∞–∑–¥–µ–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞ –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏
                        half_length = len(headers) // 2 + len(headers) % 2  # –ü–µ—Ä–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞ 1 –±–æ–ª—å—à–µ
                        first_half = headers[:half_length]
                        second_half = headers[half_length:]
                        
                        # –°–æ–∑–¥–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏
                        col_a, col_b = st.columns(2)
                        
                        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–µ—Ä–≤—É—é –ø–æ–ª–æ–≤–∏–Ω—É
                        with col_a:
                            for i, header in enumerate(first_half, 1):
                                st.markdown(f"{i}. **{header}**")
                                
                        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω—É
                        with col_b:
                            for i, header in enumerate(second_half, half_length + 1):
                                st.markdown(f"{i}. **{header}**")
                    else:
                        st.warning("–ó–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤.")
                else:
                    st.error("–ü–æ–¥—Ö–æ–¥—è—â–∏–π –ª–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ.")
        else:
            st.warning("–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ Wildberries –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ assets.")
            
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞ Wildberries: {str(e)}")

with col2:
    st.subheader("üî∂ –®–∞–±–ª–æ–Ω Ozon")
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —à–∞–±–ª–æ–Ω–∞ Ozon
        ozon_file = None
        
        # –ò—â–µ–º —à–∞–±–ª–æ–Ω Ozon —Å—Ä–µ–¥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        for file_path in template_files:
            if "–∞—Ç—ë" in file_path.lower() or "ozon" in file_path.lower():
                ozon_file = file_path
                break
        
        if ozon_file is None and len(template_files) > 1:
            ozon_file = template_files[1]  # –ë–µ—Ä–µ–º –≤—Ç–æ—Ä–æ–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ
        
        if ozon_file:
            with open(ozon_file, "rb") as f:
                workbook, sheets = load_excel_file(f)
                
                # –ò—â–µ–º –ª–∏—Å—Ç "–®–∞–±–ª–æ–Ω"
                target_sheet = None
                for sheet_name in sheets:
                    if sheet_name.lower() == "—à–∞–±–ª–æ–Ω":
                        target_sheet = sheet_name
                        break
                
                if target_sheet is None and len(sheets) > 0:
                    target_sheet = sheets[0]
                
                if target_sheet:
                    st.success(f"–§–∞–π–ª: {os.path.basename(ozon_file)}, –õ–∏—Å—Ç: {target_sheet}")
                    
                    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–æ–±—ã—á–Ω–æ –≤–æ 2-–π —Å—Ç—Ä–æ–∫–µ –¥–ª—è Ozon)
                    sheet = workbook[target_sheet]
                    header_row = 2  # –¢–∏–ø–∏—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ Ozon
                    
                    headers = []
                    for cell in sheet[header_row]:
                        if cell.value is not None and str(cell.value).strip() != "":
                            headers.append(str(cell.value))
                    
                    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ –¥–≤–∞ —Å—Ç–æ–ª–±–∏–∫–∞
                    if headers:
                        st.markdown("#### –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫:")
                        
                        # –†–∞–∑–¥–µ–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞ –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏
                        half_length = len(headers) // 2 + len(headers) % 2  # –ü–µ—Ä–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞ 1 –±–æ–ª—å—à–µ
                        first_half = headers[:half_length]
                        second_half = headers[half_length:]
                        
                        # –°–æ–∑–¥–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏
                        col_a, col_b = st.columns(2)
                        
                        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–µ—Ä–≤—É—é –ø–æ–ª–æ–≤–∏–Ω—É
                        with col_a:
                            for i, header in enumerate(first_half, 1):
                                st.markdown(f"{i}. **{header}**")
                                
                        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω—É
                        with col_b:
                            for i, header in enumerate(second_half, half_length + 1):
                                st.markdown(f"{i}. **{header}**")
                    else:
                        st.warning("–ó–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤.")
                else:
                    st.error("–ü–æ–¥—Ö–æ–¥—è—â–∏–π –ª–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ.")
        else:
            st.warning("–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ Ozon –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ assets.")
            
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞ Ozon: {str(e)}")

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
st.divider()
st.subheader("üîÑ –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è")
st.caption("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É —Ç–∞–±–ª–∏—Ü—É –∫–∞–∫ —Å–ø—Ä–∞–≤–æ—á–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–∞–ø–ø–∏–Ω–≥–æ–≤")

# –°–æ–∑–¥–∞–¥–∏–º 5 –ø–∞—Ä —Å—Ç–æ–ª–±—Ü–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π –∫–æ–ª–æ–Ω–æ–∫
mapping_data = []

# –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ Wildberries ‚Üí Ozon (–∫–ª—é—á–µ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏)
mapping_data.append({
    "Wildberries": "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", 
    "‚Üí": "‚Üí",
    "Ozon": "–ù–∞–∑–≤–∞–Ω–∏–µ",
    "| Wildberries": "–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞",
    "‚Üí ": "‚Üí",
    "Ozon ": "–ê—Ä—Ç–∏–∫—É–ª"
})

mapping_data.append({
    "Wildberries": "–¶–µ–Ω–∞, —Ä—É–±.*", 
    "‚Üí": "‚Üí",
    "Ozon": "–†–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞",
    "| Wildberries": "–í–µ—Å –≤ —É–ø–∞–∫–æ–≤–∫–µ, –≥*",
    "‚Üí ": "‚Üí",
    "Ozon ": "–í–µ—Å —Ç–æ–≤–∞—Ä–∞, –≥"
})

mapping_data.append({
    "Wildberries": "–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è", 
    "‚Üí": "‚Üí",
    "Ozon": "–®—Ç—Ä–∏—Ö–∫–æ–¥",
    "| Wildberries": "–°—Ç–∞–≤–∫–∞ –ù–î–° (10%, 20%)",
    "‚Üí ": "‚Üí",
    "Ozon ": "–ù–î–°, %"
})

mapping_data.append({
    "Wildberries": "–ì–ª—É–±–∏–Ω–∞ —É–ø–∞–∫–æ–≤–∫–∏, –º–º*", 
    "‚Üí": "‚Üí",
    "Ozon": "–î–ª–∏–Ω–∞ —É–ø–∞–∫–æ–≤–∫–∏, –º–º",
    "| Wildberries": "–®–∏—Ä–∏–Ω–∞ —É–ø–∞–∫–æ–≤–∫–∏, –º–º*",
    "‚Üí ": "‚Üí",
    "Ozon ": "–®–∏—Ä–∏–Ω–∞ —É–ø–∞–∫–æ–≤–∫–∏, –º–º"
})

mapping_data.append({
    "Wildberries": "–í—ã—Å–æ—Ç–∞ —É–ø–∞–∫–æ–≤–∫–∏, –º–º*", 
    "‚Üí": "‚Üí",
    "Ozon": "–í—ã—Å–æ—Ç–∞ —É–ø–∞–∫–æ–≤–∫–∏, –º–º",
    "| Wildberries": "–ë—Ä–µ–Ω–¥*",
    "‚Üí ": "‚Üí",
    "Ozon ": "–¢–æ—Ä–≥–æ–≤–∞—è –º–∞—Ä–∫–∞"
})

mapping_data.append({
    "Wildberries": "–û–ø–∏—Å–∞–Ω–∏–µ", 
    "‚Üí": "‚Üí",
    "Ozon": "–û–ø–∏—Å–∞–Ω–∏–µ",
    "| Wildberries": "–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π —Å—Ä–æ–∫",
    "‚Üí ": "‚Üí",
    "Ozon ": "–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π —Å—Ä–æ–∫"
})

# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
if mapping_data:
    mapping_df = pd.DataFrame(mapping_data)
    st.dataframe(mapping_df, use_container_width=True, hide_index=True)

# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ –º–∞–ø–ø–∏–Ω–≥–∞
st.subheader("üì• –°–∫–∞—á–∞—Ç—å —à–∞–±–ª–æ–Ω –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞")
st.markdown("""
–í —ç—Ç–æ–º —à–∞–±–ª–æ–Ω–µ –≤—ã –º–æ–∂–µ—Ç–µ:
1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
2. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
3. –ó–∞–≥—Ä—É–∑–∏—Ç—å –≥–æ—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–∞–ø–ø–∏–Ω–≥–∞
""")

download_col1, download_col2 = st.columns([1, 1])

with download_col1:
    # –°–æ–∑–¥–∞–µ–º Excel —Ñ–∞–π–ª —Å —à–∞–±–ª–æ–Ω–æ–º –º–∞–ø–ø–∏–Ω–≥–∞
    def create_mapping_template():
        # –°–æ–∑–¥–∞–µ–º DataFrame –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞
        wb_headers = []
        oz_headers = []
        
        # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–±—Ä–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
        try:
            for item in mapping_data:
                if "Wildberries" in item and item["Wildberries"] and item["Wildberries"] not in wb_headers:
                    wb_headers.append(item["Wildberries"])
                if "| Wildberries" in item and item["| Wildberries"] and item["| Wildberries"] not in wb_headers:
                    wb_headers.append(item["| Wildberries"])
                if "Ozon" in item and item["Ozon"] and item["Ozon"] not in oz_headers:
                    oz_headers.append(item["Ozon"])
                if "Ozon " in item and item["Ozon "] and item["Ozon "] not in oz_headers:
                    oz_headers.append(item["Ozon "])
        except:
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
            wb_headers = ["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", "–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞", "–¶–µ–Ω–∞, —Ä—É–±.*", "–í–µ—Å –≤ —É–ø–∞–∫–æ–≤–∫–µ, –≥*", 
                        "–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è", "–°—Ç–∞–≤–∫–∞ –ù–î–° (10%, 20%)", "–ì–ª—É–±–∏–Ω–∞ —É–ø–∞–∫–æ–≤–∫–∏, –º–º*", 
                        "–®–∏—Ä–∏–Ω–∞ —É–ø–∞–∫–æ–≤–∫–∏, –º–º*", "–í—ã—Å–æ—Ç–∞ —É–ø–∞–∫–æ–≤–∫–∏, –º–º*", "–ë—Ä–µ–Ω–¥*", "–û–ø–∏—Å–∞–Ω–∏–µ", 
                        "–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π —Å—Ä–æ–∫"]
            oz_headers = ["–ù–∞–∑–≤–∞–Ω–∏–µ", "–ê—Ä—Ç–∏–∫—É–ª", "–†–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞", "–í–µ—Å —Ç–æ–≤–∞—Ä–∞, –≥", "–®—Ç—Ä–∏—Ö–∫–æ–¥", 
                        "–ù–î–°, %", "–î–ª–∏–Ω–∞ —É–ø–∞–∫–æ–≤–∫–∏, –º–º", "–®–∏—Ä–∏–Ω–∞ —É–ø–∞–∫–æ–≤–∫–∏, –º–º", "–í—ã—Å–æ—Ç–∞ —É–ø–∞–∫–æ–≤–∫–∏, –º–º", 
                        "–¢–æ—Ä–≥–æ–≤–∞—è –º–∞—Ä–∫–∞", "–û–ø–∏—Å–∞–Ω–∏–µ", "–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π —Å—Ä–æ–∫"]
        
        # –°–æ–∑–¥–∞–µ–º DataFrame –≤ –¥–≤–∞ —Å—Ç–æ–ª–±—Ü–∞ (Wildberries –∏ Ozon –±–æ–∫ –æ –±–æ–∫)
        # –°–Ω–∞—á–∞–ª–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É —Å–ø–∏—Å–∫–æ–≤
        max_length = max(len(wb_headers), len(oz_headers))
        
        # –°–æ–∑–¥–∞–µ–º —á–µ—Ç—ã—Ä–µ —Å—Ç–æ–ª–±—Ü–∞ –¥–∞–Ω–Ω—ã—Ö: Wildberries1, Ozon1, Wildberries2, Ozon2
        wb_col1 = []
        oz_col1 = []
        wb_col2 = []
        oz_col2 = []
        
        # –î–µ–ª–∏–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞ –¥–≤–µ —á–∞—Å—Ç–∏ –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º
        half_length = (max_length + 1) // 2
        
        for i in range(half_length):
            if i < len(wb_headers):
                wb_col1.append(wb_headers[i])
                oz_val = oz_headers[i] if i < len(oz_headers) else ""
                oz_col1.append(oz_val)
            else:
                wb_col1.append("")
                oz_col1.append("")
        
        for i in range(half_length, max_length):
            if i < len(wb_headers):
                wb_col2.append(wb_headers[i])
                oz_val = oz_headers[i] if i < len(oz_headers) else ""
                oz_col2.append(oz_val)
            else:
                wb_col2.append("")
                oz_col2.append("")
        
        # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–ª–∏–Ω—ã —Å—Ç–æ–ª–±—Ü–æ–≤
        while len(wb_col2) < len(wb_col1):
            wb_col2.append("")
            oz_col2.append("")
        
        # –°–æ–∑–¥–∞–µ–º DataFrame —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –≤ –¥–≤–∞ —Å—Ç–æ–ª–±—Ü–∞ (Wildberries1, Ozon1, Wildberries2, Ozon2)
        mapping_template = pd.DataFrame({
            "Wildberries (1)": wb_col1,
            "Ozon (1)": oz_col1,
            "Wildberries (2)": wb_col2,
            "Ozon (2)": oz_col2
        })
        
        # –°–æ–∑–¥–∞–µ–º –±—É—Ñ–µ—Ä –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è Excel —Ñ–∞–π–ª–∞
        output = io.BytesIO()
        
        # –°–æ–∑–¥–∞–µ–º Excel-–ø–∏—Å–∞—Ç–µ–ª—è
        with pd.ExcelWriter(output, engine='openpyxl') as writer:
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º DataFrame –≤ Excel
            mapping_template.to_excel(writer, sheet_name='–ú–∞–ø–ø–∏–Ω–≥', index=False)
            
            # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–±–æ—á—É—é –∫–Ω–∏–≥—É –∏ –ª–∏—Å—Ç
            workbook = writer.book
            worksheet = writer.sheets['–ú–∞–ø–ø–∏–Ω–≥']
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫
            worksheet.column_dimensions['A'].width = 40
            worksheet.column_dimensions['B'].width = 40
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ª–∏—Å—Ç–µ
            instruction_sheet = workbook.create_sheet(title='–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            instruction_sheet['A1'] = '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —à–∞–±–ª–æ–Ω–∞ –º–∞–ø–ø–∏–Ω–≥–∞'
            instruction_sheet['A3'] = '1. –í –∫–æ–ª–æ–Ω–∫–µ "Wildberries" –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ –∏–∑ —à–∞–±–ª–æ–Ω–∞ Wildberries'
            instruction_sheet['A4'] = '2. –í –∫–æ–ª–æ–Ω–∫–µ "Ozon" –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ –∏–∑ —à–∞–±–ª–æ–Ω–∞ Ozon'
            instruction_sheet['A5'] = '3. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏'
            instruction_sheet['A6'] = '4. –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π'
            instruction_sheet['A7'] = '5. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –º–∞–ø–ø–∏–Ω–≥–∞'
            instruction_sheet['A9'] = '–í–∞–∂–Ω–æ: —Å–æ—Ö—Ä–∞–Ω—è–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –Ω–∞–∑–≤–∞–Ω–∏—è –ª–∏—Å—Ç–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∏–º–ø–æ—Ä—Ç–∞'
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫ –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            instruction_sheet.column_dimensions['A'].width = 120
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º Excel —Ñ–∞–π–ª –≤ –±—É—Ñ–µ—Ä
        workbook.save(output)
        output.seek(0)
        
        return output

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
    template_buffer = create_mapping_template()
    st.download_button(
        label="üìù –°–∫–∞—á–∞—Ç—å —à–∞–±–ª–æ–Ω –º–∞–ø–ø–∏–Ω–≥–∞ (Excel)",
        data=template_buffer,
        file_name="template_mapping.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        help="–°–∫–∞—á–∞–π—Ç–µ —à–∞–±–ª–æ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–≤–æ–µ–≥–æ –º–∞–ø–ø–∏–Ω–≥–∞"
    )

with download_col2:
    st.info("""
    **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω:**
    
    1. –°–∫–∞—á–∞–π—Ç–µ Excel-—Ñ–∞–π–ª —Å —à–∞–±–ª–æ–Ω–æ–º –º–∞–ø–ø–∏–Ω–≥–∞
    2. –û—Ç–∫—Ä–æ–π—Ç–µ –µ–≥–æ –≤ Excel –∏–ª–∏ –¥—Ä—É–≥–æ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ
    3. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –º–µ–∂–¥—É –∫–æ–ª–æ–Ω–∫–∞–º–∏
    4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª
    5. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –µ–≥–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    6. –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é "–ó–∞–≥—Ä—É–∑–∏—Ç—å –º–∞–ø–ø–∏–Ω–≥ –∏–∑ —Ñ–∞–π–ª–∞"
    """)

# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
if st.button("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"):
    st.switch_page("app.py")